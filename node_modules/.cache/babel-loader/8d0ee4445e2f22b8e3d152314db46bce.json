{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heitorzin\\\\Desktop\\\\codeleap\\\\src\\\\components\\\\EditModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../_assets/modaledit.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editPost } from \"../redux/posts.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditModal(_ref) {\n  _s();\n\n  let {\n    closeModal,\n    editId\n  } = _ref;\n  const post = useSelector(state => state.loadPosts.find(post => post.id === editId));\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(post === null || post === void 0 ? void 0 : post.title);\n  const [content, setContent] = useState(post === null || post === void 0 ? void 0 : post.content);\n  const [buttonGreyOut, setButtonGreyOut] = useState(\"#cccccc\");\n  useEffect(() => {\n    if (title && content !== \"\") {\n      setButtonGreyOut(\"black\");\n    } else {\n      setButtonGreyOut(\"#cccccc\");\n    }\n  }, [title, content]);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostClicked = e => {\n    e.preventDefault();\n    dispatch(editPost({\n      id: editId,\n      title,\n      content\n    }));\n    closeModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editmodalbackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editmodalcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Hello World\",\n          name: \"name\",\n          value: title,\n          onChange: onTitleChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Content\",\n          name: \"content\",\n          value: content,\n          onChange: onContentChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onSavePostClicked,\n          disabled: !title || !content,\n          style: {\n            backgroundColor: buttonGreyOut\n          },\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"Me7XnOSxfX16Wbu8Lpk+H8KaGbY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["C:/Users/heitorzin/Desktop/codeleap/src/components/EditModal.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","editPost","EditModal","closeModal","editId","post","state","loadPosts","find","id","dispatch","title","setTitle","content","setContent","buttonGreyOut","setButtonGreyOut","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","preventDefault","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../_assets/modaledit.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { editPost } from \"../redux/posts.slice\";\n\nexport function EditModal({ closeModal, editId }) {\n  const post = useSelector((state) =>\n    state.loadPosts.find((post) => post.id === editId)\n  );\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(post?.title);\n  const [content, setContent] = useState(post?.content);\n\n  const [buttonGreyOut, setButtonGreyOut] = useState(\"#cccccc\");\n\n  useEffect(() => {\n    if (title && content !== \"\") {\n      setButtonGreyOut(\"black\");\n    } else {\n      setButtonGreyOut(\"#cccccc\");\n    }\n  }, [title, content]);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n\n  const onSavePostClicked = (e) => {\n    e.preventDefault();\n    dispatch(editPost({ id: editId, title, content }));\n    closeModal(false);\n  };\n\n  return (\n    <div className=\"editmodalbackground\">\n      <div className=\"editmodalcontainer\">\n        <div className=\"title\">\n          <h1>Edit item</h1>\n        </div>\n        <h2>Title</h2>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Hello World\"\n            name=\"name\"\n            value={title}\n            onChange={onTitleChanged}\n          ></input>\n          <h2>Content</h2>\n          <textarea\n            placeholder=\"Content\"\n            name=\"content\"\n            value={content}\n            onChange={onContentChanged}\n          ></textarea>\n\n          <button\n            onClick={onSavePostClicked}\n            disabled={!title || !content}\n            style={{ backgroundColor: buttonGreyOut }}\n          >\n            SAVE\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}